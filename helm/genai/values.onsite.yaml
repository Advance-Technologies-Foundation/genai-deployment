replicaCount: 1

dockerRegistry:
  enabled: true
  username: <your-username>
  password: <your-password>
  email: <your-email>

commonImagesConfig:
  imagePullSecretEnabled: true

enrichment:
  resources:
    limits:
      cpu: 600m
      memory: 1600Mi
    requests:
      cpu: 200m
      memory: 1000Mi

env:
  - name: ENRICHMENT_AuthenticationOptions__UseOAuth
    value: "false"
  - name: ENRICHMENT_AuthenticationOptions__IdentityProviderUrl
    value: "http://localhost"

appConfig:
  redis:
    enabled: false
  db:
    host: postgresql-genai
    port: 5432
    user: postgres
    password: postgres
    database: genai
    schema: genai
  genAI:
    llmProviders:
      type: custom
      defaultModel: gpt-4o
      embeddingsModel: text-embedding-3-large
      models:
        openai:
          - name: gpt-4o
            model: gpt-4o
            api_key: <your_openai_api_key>
          - name: text-embedding-3-large
            model: text-embedding-3-large
            api_key: <your_openai_api_key>
        # azure:
        #   - name: <put the name>
        #     model: <put the model model>
        #     resource_name: <put the resource's name>
        #     api_key: <put api key>

    genEntitiesMockRequestQuery: "Medical record"
    maxRequestsPerHour: -1
    maxRequestsPerDay: -1
    maxRequestsPerMonth: -1
    maxTokensPerMonth: -1
    maxTokensPerDay: -1
    maxTokensPerHour: -1
    maxTokensPerMinute: -1
    maxTotalTokens: -1
    storeSensitiveFieldsInStats: true
  traceDebugInfo: false
  logLevel: "ERROR"
  minThreads: 1000

usageLimitsRetriever:
  enabled: false

grayLog:
  enabled: false

redis:
  enabled: false

nameOverride: ""
fullnameOverride: ""

service:
  type: NodePort
  nodePort: 30082

spacy:
  enabled: false

postgresql:
  enabled: true
  fullnameOverride: postgresql-genai
  primary:
    resources:
      requests:
        memory: 128Mi
        cpu: 200m
      limits:
        memory: 1024Mi
        cpu: 500m
    persistence:
      enabled: true
      size: 50Gi
  auth:
    username: postgres
    password: postgres
    database: genai
    forcePassword: true
mockserver:
  enabled: false

litellm:
  enabled: true
  resources:
    requests:
      memory: 512Mi
      cpu: 500m
    limits:
      memory: 3096Mi
      cpu: 1000m
  #fallbacks:
      #<put fall back models>
      #- azure-gpt-4o-2024-05-13: []
      #- openai-gpt-4o: []

ingress:
  enabled: false
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '480'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '480'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '480'
  hosts:
    - genai.example.com
